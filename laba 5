"""Задана рекуррентная функция. Область определения функции – натуральные числа. 
Написать программу сравнительного вычисления данной функции рекурсивно и итерационно (значение, время). 
Определить (смоделировать) границы применимости рекурсивного и итерационного подхода.

import time
import math
import matplotlib.pyplot as plt

def recursive_F(n, facn, val):
    if n == 0 or n == 1:
        return 3
    elif n > 23:
        val*=-1
        return (val * ((3 - recursive_F(n-1, facn, val))/factorial(n, facn) - (n-2)))
    else:
        return (n-2) * recursive_F(n-1, facn, val)

def iterative_F(n, facn, val):
    if n == 0 or n == 1:
        return 3
    result = 0
    a, b = 1, 1
    for i in range(2, n+1):
        if i > 23:
            val*=-1
            result = (val * ((3 - (a+b))/factorial(i, facn) - (i-2)))
            a, b = b, result
        else:
            result = (i-2) * (a+b)
            a, b = b, result
    return result

def factorial(n, facn):
    faсn *= (2*n * factorial(2*n-1))
    return facn

n = int(input("Введите значение n: "))
odin = int(input("Введите число -1 или 1: "))
while not (-1 == odin or odin == 1):
    print("Это число не является 1 или -1. Повторите ввод.")
    odin = int(input("Введите число -1 или 1 "))
c = 2

start_time = time.time()
print("Recursive time: %s seconds" % (time.time() - start_time))

start_time = time.time()
print("Iterative time: %s seconds" % (time.time() - start_time))

labels = ['Recursive', 'Iterative']
times = [recursive_time, iterative_time]

plt.bar(labels, times)
plt.ylabel('Время (s)')
plt.title('Исследования времени вычисления итерации и рекурсии'')
plt.show()
